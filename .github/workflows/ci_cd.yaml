name: CI/CD Elixir

on:
    push:
      branches: [main]
    pull_request:
      branches: [main]
    workflow_dispatch:

jobs:
    ci:
        runs-on: ubuntu-latest
        name: Compile with mix test, format & dialyzer
        env:
            MIX_ENV: test
            ImageOS: ubuntu22
        steps:
            - uses: actions/checkout@v4

            - name: Setup Elixir
              uses: erlef/setup-beam@v1.17.3
              with:
                  version-file: .tool-versions
                  version-type: strict

            - name: Parse version from .tool-versions
              id: parse-asdf
              run: ./scripts/versions.sh

            - name: Cache deps directory
              uses: actions/cache@v4
              id: cache-deps
              with:
                path: |
                    deps
                    _build
                key: ${{ runner.os }}-mix-erlang-${{ env.ERLANG_VERSION }}-elixir-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
                restore-keys: |
                    ${{ runner.os }}-mix-erlang-${{ env.ERLANG_VERSION }}-elixir-${{ env.ELIXIR_VERSION }}-

            - name: Get dependencies
              if: steps.cache-deps.outputs.cache-hit != 'true'
              run: mix deps.get

            - run: mix compile

            - name: Check code is formatted
              run: mix format --check-formatted

            - name: Run tests
              run: mix test --max-failures 1 --trace --warnings-as-errors

            - name: Check unused dependencies
              run: mix deps.unlock --check-unused

    build-push:
      runs-on: ubuntu-latest
      needs: ci
      name: Build Docker Image and push to ghcr.io
      steps:
        - uses: actions/checkout@v4

        - name: Login to GHCR
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GH_PAT }}
            
        - name: Docker Meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: |
              ghcr.io/rodrigosantiag/simple_api

            tags: |
              type=raw,value=latest,enable={{is_default_branch}}
              type=ref,event=pr
              type=sha,format=short

        - name: Parse version from .tool-versions
          id: parse-asdf
          run: ./scripts/versions.sh

          
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
          
        - uses: docker/setup-buildx-action@v3

        - uses: docker/build-push-action@v6
          with:
            context: .
            cache-from: type=registry,ref=ghcr.io/rodrigosantiag/simple_api:cache
            cache-to: type=registry,ref=ghcr.io/rodrigosantiag/simple_api:cache,mode=max
            tags: ${{ steps.meta.outputs.tags }}
            platforms: linux/amd64,linux/arm64
            labels: ${{ steps.meta.outputs.labels }}
            push: true
            build-args: |
              ELIXIR_VERSION=${{ env.ELIXIR_VERSION }}
              OTP_VERSION=${{ env.ERLANG_VERSION }}